server.ssl.key-store=classpath:felsoauth2serverkeystore.jks
server.ssl.key-store-type=pkcs12
server.ssl.key-store-password=notactualpass
server.ssl.key-password=notactualpass
server.ssl.key-alias=accounts.felstech.com
server.ssl.enabled-protocols=TLSv1.3
server.ssl.ciphers=TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256
server.ssl.enabled=true

server.port=9000
#Database connection
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url = jdbc:postgresql://localhost:5432/db_fels_oauth2_server
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update

#Google client setup
spring.security.oauth2.client.registration.google-idp.provider=google
spring.security.oauth2.client.registration.google-idp.client-id=${GOOGLE_CLIENT_ID:<enter>}
spring.security.oauth2.client.registration.google-idp.client-secret=${GOOGLE_CLIENT_SECRET:<enter>}
spring.security.oauth2.client.registration.google-idp.scope=openid,https://www.googleapis.com/auth/userinfo.profile,https://www.googleapis.com/auth/userinfo.email
spring.security.oauth2.client.registration.google-idp.client-name=Sign in with Google
spring.security.oauth2.client.provider.google.user-name-attribute=email

logging.file.name = logs/fels_oauth2_server.log


